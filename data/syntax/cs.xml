<!DOCTYPE language>
<language name="C#" version="13" kateversion="5.0" section="Sources" extensions="*.cs;*.ashx" mimetype="text/x-csharp-src;text/x-csharp-hde" indenter="cstyle" style="C++">
  <highlighting>
    <list name="keywords">
      <item>abstract</item>
      <item>as</item>
      <item>base</item>
      <item>break</item>
      <item>case</item>
      <item>catch</item>
      <item>class</item>
      <item>checked</item>
      <item>continue</item>
      <item>default</item>
      <item>delegate</item>
      <item>do</item>
      <item>else</item>
      <item>enum</item>
      <item>event</item>
      <item>explicit</item>
      <item>extern</item>
      <item>false</item>
      <item>for</item>
      <item>foreach</item>
      <item>finally</item>
      <item>fixed</item>
      <item>goto</item>
      <item>if</item>
      <item>implicit</item>
      <item>in</item>
      <item>interface</item>
      <item>internal</item>
      <item>is</item>
      <item>lock</item>
      <item>namespace</item>
      <item>new</item>
      <item>null</item>
      <item>operator</item>
      <item>out</item>
      <item>override</item>
      <item>params</item>
      <item>private</item>
      <item>protected</item>
      <item>public</item>
      <item>readonly</item>
      <item>ref</item>
      <item>return</item>
      <item>sealed</item>
      <item>sizeof</item>
      <item>stackalloc</item>
      <item>static</item>
      <item>struct</item>
      <item>switch</item>
      <item>this</item>
      <item>throw</item>
      <item>true</item>
      <item>try</item>
      <item>typeof</item>
      <item>unchecked</item>
      <item>unsafe</item>
      <item>using</item>
      <item>virtual</item>
      <item>while</item>
      <item>#if</item>
      <item>#else</item>
      <item>#elif</item>
      <item>#endif</item>
      <item>#define</item>
      <item>#undef</item>
      <item>#warning</item>
      <item>#error</item>
      <item>#line</item>
    </list>
    <list name="types">
      <item>bool</item>
      <item>byte</item>
      <item>char</item>
      <item>const</item>
      <item>decimal</item>
      <item>double</item>
      <item>float</item>
      <item>int</item>
      <item>long</item>
      <item>object</item>
      <item>uint</item>
      <item>ushort</item>
      <item>ulong</item>
      <item>sbyte</item>
      <item>short</item>
      <item>string</item>
      <item>void</item>
    </list>
    <contexts>
      <context attribute="Normal Text" lineEndContext="#stay" name="Normal">
        <keyword attribute="Keyword" context="#stay" String="keywords"/>
        <keyword attribute="Data Type" context="#stay" String="types" />
        <Float attribute="Float" context="Float Suffixes"/>
        <HlCOct attribute="Octal" context="#stay"/>
        <HlCHex attribute="Hex" context="#stay"/>
        <Int attribute="Decimal" context="Int Suffixes"/>
        <HlCChar attribute="Char" context="#stay"/>
        <DetectChar attribute="String" context="String" char="&quot;"/>
        <Detect2Chars attribute="Comment" context="MatchComment" char="/" char1="/" lookAhead="true"/>
        <Detect2Chars attribute="Comment" context="MatchComment" char="/" char1="*" lookAhead="true" />
        <DetectChar attribute="Symbol" context="#stay" char="{" beginRegion="block1"/>
        <DetectChar attribute="Symbol" context="#stay" char="}" endRegion="block1"/>
        <RegExpr attribute="Data Type" context="#stay" String="\bvar(?=\s+\w+)"/>
        <RegExpr attribute="Keyword" context="#stay" String="\b(partial(?=\s+(?:class|struct|interface|void))|yield(?=\s+(?:return|break))|(?:set|get)(?=\s*[;{])|global(?=\s*::\s*\w+))"/>
        <StringDetect attribute="Decimal" context="Decimal" String="#region" beginRegion="Region1"/>
        <StringDetect attribute="Decimal" context="Decimal" String="#endregion" endRegion="Region1"/>
        <RegExpr attribute="Function" context="#stay" String="\b[_\w][_\w\d]*(?=[\s]*[(])" />
        <DetectChar attribute="Symbol" context="Member" char="."/>
        <AnyChar attribute="Symbol" context="#stay" String=":!%&amp;()+,-/*&lt;=&gt;?[]|~^&#59;"/>
      </context>
      <context name="Float Suffixes" attribute="Float" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
          <AnyChar String="dDfFmM" attribute="Float" context="#pop"/>
      </context>
      <context name="Int Suffixes" attribute="Decimal" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
          <StringDetect attribute="Decimal" context="#pop" String="UL" insensitive="true"/>
          <StringDetect attribute="Decimal" context="#pop" String="LU" insensitive="true"/>
          <AnyChar attribute="Decimal" context="#pop" String="ULul"/>
      </context>
      <context attribute="String" lineEndContext="#pop" name="String">
        <LineContinue attribute="String" context="#pop"/>
        <HlCStringChar attribute="String Char" context="#stay"/>
        <DetectChar attribute="String" context="#pop" char="&quot;"/>
      </context>
      <context attribute="Normal Text" lineEndContext="#pop" name="Member" fallthrough="true" fallthroughContext="#pop">
        <RegExpr attribute="Function" context="#pop" String="\b[_\w][_\w\d]*(?=[\s]*)" />
      </context>
      <context attribute="Comment" lineEndContext="#pop" name="Commentar 1">
        <IncludeRules context="##Comments"/>
      </context>
      <context attribute="Comment" lineEndContext="#stay" name="Commentar 2">
        <Detect2Chars attribute="Comment" context="#pop" char="*" char1="/" endRegion="BlockComment"/>
        <IncludeRules context="##Comments"/>
      </context>
      <context name="MatchComment" attribute="Normal Text" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
        <IncludeRules context="##Doxygen" />
        <Detect2Chars attribute="Comment" context="#pop!Commentar 1" char="/" char1="/" />
        <Detect2Chars attribute="Comment" context="#pop!Commentar 2" char="/" char1="*" beginRegion="BlockComment" />
      </context>
      <context attribute="Decimal" lineEndContext="#pop" name="Decimal"/>
    </contexts>
    <itemDatas>
      <itemData name="Normal Text"  defStyleNum="dsNormal"/>
      <itemData name="Keyword"      defStyleNum="dsKeyword"/>
      <itemData name="Function"     defStyleNum="dsFunction"/>
      <itemData name="Data Type"    defStyleNum="dsDataType"/>
      <itemData name="Decimal"      defStyleNum="dsDecVal"/>
      <itemData name="Octal"        defStyleNum="dsBaseN"/>
      <itemData name="Hex"          defStyleNum="dsBaseN"/>
      <itemData name="Float"        defStyleNum="dsFloat"/>
      <itemData name="Char"         defStyleNum="dsChar"/>
      <itemData name="String"       defStyleNum="dsString"/>
      <itemData name="String Char"  defStyleNum="dsSpecialChar"/>
      <itemData name="Comment"      defStyleNum="dsComment"/>
      <itemData name="Symbol"       defStyleNum="dsOperator"/>
    </itemDatas>
  </highlighting>
  <general>
    <comments>
      <comment name="singleLine" start="//" position="afterwhitespace"/>
      <comment name="multiLine" start="/*" end="*/" region="BlockComment" />
    </comments>
    <keywords casesensitive="1" />
  </general>
</language>
<!-- kate: replace-tabs on; tab-width 2; indent-width 2; -->
